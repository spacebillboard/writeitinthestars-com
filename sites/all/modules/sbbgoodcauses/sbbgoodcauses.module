<?php
module_load_include('inc', 'webform', 'includes/webform.submissions');

/**
 * Does the URL binding.
 */
function sbbgoodcauses_menu() {
  $items = array();
  
  $items['good-causes/%'] = array(
    'title' => 'T minus 10...',
    'page callback' => 'sbbgoodcauses_single_cause',
    'page arguments' => array(1),
    'access callback' => true,
    'type' => MENU_CALLBACK
  );  
  $items['good-causes-vote'] = array(
    'title' => 'T minus 10...',
    'page callback' => 'sbbgoodcauses_vote',
    'access callback' => true,
    'type' => MENU_CALLBACK
  ); 

  return $items;
}

function sbbgoodcauses_get_good_cause($id) {
  # look up the first vote with the given id
  # FIXME horribly inefficient, if this becomes a problem: move to a separate db
  $webformNid = variable_get('sbbgoodcauses_votes_webform_id');
  $node = node_load($webformNid);
  // MDC: I don't know how to use these filters, so just do it brute force
  $submissions = webform_get_submissions($webformNid); 
  $submission = NULL;
  foreach($submissions as $s) {
    if($s->data[1]['value'][0] == "$id") {
      $submission = $s;
      break;
    }
  }
  if($submission == NULL) {
    return NULL;
  }
  return array(
    "id" => $submission->data[1]['value'][0],
    "name" => $submission->data[2]['value'][0],
    "url" => $submission->data[3]['value'][0],
    "reason" => $submission->data[4]['value'][0]
  );
}

function sbbgoodcauses_single_cause($id) {
  $cause = sbbgoodcauses_get_good_cause($id);
  if($cause !== NULL) {
    user_cookie_save(array("goodcauseid" => $cause["id"]));
    user_cookie_save(array("goodcausename" => $cause["name"])); // will lead to the cookie Drupal.visitor.goodcausename (from php: $_COOKIE['Drupal_visitor_goodcausename'])
    user_cookie_save(array("goodcauseurl" => $cause["url"]));
  } else {
    watchdog('sbbgoodcauses', "Good cause not found: $id");
  }
  drupal_goto();    
}

function sbbgoodcauses_vote() {
  $id = "";
  $name = "";
  $url = "";
  $reason = "";
  // first check that all the necessary variables are given
  if(!isset($_POST['name']) || strlen($_POST['name']) == 0) {
    echo("1032958649-error: name missing");
    return; 
  } else {
    $name = $_POST['name']; 
  }
  if(!isset($_POST['id'])) {
    echo("1032958649-error: id missing");
    return; 
  } else {
    $id = $_POST['id']; 
    if(strlen($id) == 0) {    
      # construct the id from the name
      $id = strtolower($name);
      $id = str_replace(' ', '-', $id);
      $id = str_replace('_', '-', $id);
      $id = str_replace('\'', '', $id);
      $id = str_replace('?', '', $id);
      $id = str_replace('#', '', $id);
      $id = str_replace('*', '', $id);
      $id = str_replace('$', '', $id);
      $id = str_replace('%', '', $id);
      $id = str_replace('^', '', $id);
      $id = str_replace('\\', '', $id);
      $id = str_replace('/', '', $id);
      $id = str_replace('@', '', $id);
      $id = str_replace('$', '', $id);
      $id = str_replace('&', '', $id);
      $id = str_replace('"', '', $id);
      $id = str_replace(',', '', $id);
      $id = str_replace(';', '', $id);
      $id = str_replace('(', '', $id);
      $id = str_replace(')', '', $id);
      $id = str_replace('[', '', $id);
      $id = str_replace(']', '', $id);
      $id = str_replace('}', '', $id);
      $id = str_replace('{', '', $id);
    }
  }
  if(!isset($_POST['url']) || strlen($_POST['url']) == 0) {
    echo("1032958649-error: url missing");
    return;
  } else {
    $url = $_POST['url'];
  }
  if(!isset($_POST['reason']) || strlen($_POST['reason']) == 0) {
    echo("1032958649-error: reason missing");
    return; 
  } else {
    $reason = $_POST['reason'];
//    if(strlen($reason) < 50) {
//      echo("error: reason too short");
//      return;
//    }
  }
  // then store the new vote
  $webformNid = variable_get('sbbgoodcauses_votes_webform_id');
  $node = node_load($webformNid);
  global $user;
  $data = array(
    1 => array('value' => array($id)),
    2 => array('value' => array($name)),
    3 => array('value' => array($url)),
    4 => array('value' => array($reason))
  );
  $submission = (object) array(
    'nid' => $webformNid,
    'uid' => $user->uid,
    'submitted' => REQUEST_TIME,
    'remote_addr' => ip_address(),
    'is_draft' => FALSE,
    'data' => $data,
  );
  webform_submission_insert($node, $submission);
  webform_submission_send_mail($node, $submission);
  // finally: return the (created) id to the user
  echo($id);
}
